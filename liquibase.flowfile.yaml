###
### Simplified flow file to test exit code behavior
### This will intentionally fail on PolicyChecks and DriftDetection stages
###

globalVariables:
  LB_BASE_DIR: "${LB_BASE_DIR:-.}"
  LB_ENVIRONMENT: "${LB_ENVIRONMENT:-DEV}"
  LB_LABELS: "${LB_LABELS:-null}"

  DIFF_FILE: "Diff_${LB_ENVIRONMENT}.json"
  SNAPSHOT_FILE: "Snapshot_${LB_ENVIRONMENT}.json"
  CHECKS_REPORT: "Checks_${LB_ENVIRONMENT}.html"
  DRIFT_REPORT: "Diff_${LB_ENVIRONMENT}.html"
  ROLLBACK_REPORT: "Rollback_${LB_ENVIRONMENT}.html"
  UPDATE_REPORT: "Update_${LB_ENVIRONMENT}.html"

  LB_SHOW_UPDATE_SQL: "${LB_SHOW_UPDATE_SQL:-F}"
  LB_TEST_CHECKS: "${LB_TEST_CHECKS:-T}"
  LB_TEST_DRIFT: "${LB_TEST_DRIFT:-T}"
  LB_TEST_ROLLBACKS: "${LB_TEST_ROLLBACKS:-F}"

stages:
  Verify:
    actions:
      - type: liquibase
        command: connect

      - type: liquibase
        command: validate

      - type: liquibase
        command: status
        cmdArgs: { label-filter: "${LB_LABELS}" }
  PolicyChecks:
    actions:
      #
      # Show policy checks
      # https://docs.liquibase.com/liquibase-pro/policy-checks/home.html
      #
      - type: liquibase
        if: "${LB_TEST_CHECKS} == T"
        command: checks show
        cmdArgs: { check-status: "enabled" }
      #
      # Run policy checks
      # https://docs.liquibase.com/liquibase-pro/policy-checks/home.html
      #
      - type: liquibase
        if: "${LB_TEST_CHECKS} == T"
        command: checks run
        cmdArgs: { report-enabled: "true", report-path: "${LB_BASE_DIR}", report-name: "${CHECKS_REPORT}", checks-scope: "changelog, database", changeset-filter: "pending", auto-update: "on" }
  DriftDetection:
    actions:
      - type: liquibase
        if: "exists('${SNAPSHOT_FILE}', false) && ${LB_TEST_DRIFT} == 'T'"
        command: diff
        globalArgs: { outputfile: "${LB_BASE_DIR}/${DIFF_FILE}" }
        cmdArgs: { drift-severity: "1", report-enabled: "true", report-path: "${LB_BASE_DIR}", report-name: "${DRIFT_REPORT}", referenceURL: "offline:h2?snapshot=${SNAPSHOT_FILE}", format: json }
  Deploy:
    actions:
      - type: control
        if: "status.changesetCount == 0"
        command: exit
        cmdArgs: { exitCode: "0", exitMessage: "Database is current!" }
      - type: liquibase
        command: update
        cmdArgs: { report-enabled: "false" }
  PostDeploy:
    actions:
      - type: liquibase
        command: snapshot
        globalArgs: { outputfile: "${LB_BASE_DIR}/${SNAPSHOT_FILE}" }
        cmdArgs: { snapshotFormat: "json" }

endStage:
  actions:
    - type: liquibase
      command: history
